name: Notify New Relic on Successful Workflow Completion

on:
  workflow_run:
    workflows: ["Long Running Workflow"]
    types:
      - completed

jobs:
  notify_new_relic_on_success:
    runs-on: ubuntu-latest
    steps:
      - name: Record start time
        id: start_time
        run: echo "start_time=$(date +%s)" >> $GITHUB_ENV

      - name: Your Actual Workflow Job
        run: |
          # Create and list files for testing
          echo "This is a test file 11." > file11.txt
          echo "This is a test file 12." > file12.txt

          # List the files in the current directory
          ls -l

          # Display the contents of the files
          cat file11.txt
          cat file12.txt

      - name: Record end time
        id: end_time
        run: echo "end_time=$(date +%s)" >> $GITHUB_ENV

      - name: Create JSON payload
        id: create_payload
        run: |
          duration=$(( ${{ env.end_time }} - ${{ env.start_time }} ))
          echo "Workflow duration: $duration seconds"
          
          # Create the JSON payload
          cat <<EOF > event_payload.json
          [
            {
              "eventType": "GitHubWorkflowSuccess",
              "repo": "${{ github.repository }}",
              "workflow": "${{ github.workflow }}",
              "duration": "$duration",
              "status": "success",
              "url": "${{ github.server_url }}/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "run_id": "${{ github.run_id }}",
              "run_number": "${{ github.run_number }}",
              "sha": "${{ github.sha }}",
              "ref": "${{ github.ref }}"
            }
          ]
          EOF

      - name: Notify New Relic on Success
        if: ${{ success() }}  # Ensure this step runs only if the workflow succeeds
        run: |
          # Send the payload to New Relic and capture the response
          response=$(gzip -c event_payload.json | curl -s -w "%{http_code}" -o /tmp/newrelic_response.log \
            -X POST -H "Content-Type: application/json" \
            -H "Api-Key: eu01xx9ddbdb162b1ed2a2f98b070fd1FFFFNRAL" \
            -H "Content-Encoding: gzip" \
            https://insights-collector.eu01.nr-data.net/v1/accounts/3398389/events \
            --data-binary @-)
          
          # Extract the HTTP status code from the response
          http_status="${response: -3}"
          
          # Check if the status code indicates success
          if [[ "$http_status" == "200" || "$http_status" == "202" ]]; then
            echo "Event sent successfully to New Relic. HTTP status code: $http_status"
            cat /tmp/newrelic_response.log  # Optional: Show response body
          else
            echo "Failed to send event to New Relic. HTTP status code: $http_status"
            cat /tmp/newrelic_response.log  # Show response body to debug
            exit 1
          fi
